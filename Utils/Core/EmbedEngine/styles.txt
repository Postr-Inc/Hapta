<style type="text/css" data-vite-dev-id="C:/Users/mwhitten/OneDrive - Special School District of St. Louis County/Documents/Project-2025/Postly-1.7.2-Solid/src/index.css">*, ::before, ::after {
   --tw-border-spacing-x: 0;
   --tw-border-spacing-y: 0;
   --tw-translate-x: 0;
   --tw-translate-y: 0;
   --tw-rotate: 0;
   --tw-skew-x: 0;
   --tw-skew-y: 0;
   --tw-scale-x: 1;
   --tw-scale-y: 1;
   --tw-pan-x:  ;
   --tw-pan-y:  ;
   --tw-pinch-zoom:  ;
   --tw-scroll-snap-strictness: proximity;
   --tw-gradient-from-position:  ;
   --tw-gradient-via-position:  ;
   --tw-gradient-to-position:  ;
   --tw-ordinal:  ;
   --tw-slashed-zero:  ;
   --tw-numeric-figure:  ;
   --tw-numeric-spacing:  ;
   --tw-numeric-fraction:  ;
   --tw-ring-inset:  ;
   --tw-ring-offset-width: 0px;
   --tw-ring-offset-color: #fff;
   --tw-ring-color: rgb(59 130 246 / 0.5);
   --tw-ring-offset-shadow: 0 0 #0000;
   --tw-ring-shadow: 0 0 #0000;
   --tw-shadow: 0 0 #0000;
   --tw-shadow-colored: 0 0 #0000;
   --tw-blur:  ;
   --tw-brightness:  ;
   --tw-contrast:  ;
   --tw-grayscale:  ;
   --tw-hue-rotate:  ;
   --tw-invert:  ;
   --tw-saturate:  ;
   --tw-sepia:  ;
   --tw-drop-shadow:  ;
   --tw-backdrop-blur:  ;
   --tw-backdrop-brightness:  ;
   --tw-backdrop-contrast:  ;
   --tw-backdrop-grayscale:  ;
   --tw-backdrop-hue-rotate:  ;
   --tw-backdrop-invert:  ;
   --tw-backdrop-opacity:  ;
   --tw-backdrop-saturate:  ;
   --tw-backdrop-sepia:  ;
   --tw-contain-size:  ;
   --tw-contain-layout:  ;
   --tw-contain-paint:  ;
   --tw-contain-style:  ;
   }
   ::backdrop {
   --tw-border-spacing-x: 0;
   --tw-border-spacing-y: 0;
   --tw-translate-x: 0;
   --tw-translate-y: 0;
   --tw-rotate: 0;
   --tw-skew-x: 0;
   --tw-skew-y: 0;
   --tw-scale-x: 1;
   --tw-scale-y: 1;
   --tw-pan-x:  ;
   --tw-pan-y:  ;
   --tw-pinch-zoom:  ;
   --tw-scroll-snap-strictness: proximity;
   --tw-gradient-from-position:  ;
   --tw-gradient-via-position:  ;
   --tw-gradient-to-position:  ;
   --tw-ordinal:  ;
   --tw-slashed-zero:  ;
   --tw-numeric-figure:  ;
   --tw-numeric-spacing:  ;
   --tw-numeric-fraction:  ;
   --tw-ring-inset:  ;
   --tw-ring-offset-width: 0px;
   --tw-ring-offset-color: #fff;
   --tw-ring-color: rgb(59 130 246 / 0.5);
   --tw-ring-offset-shadow: 0 0 #0000;
   --tw-ring-shadow: 0 0 #0000;
   --tw-shadow: 0 0 #0000;
   --tw-shadow-colored: 0 0 #0000;
   --tw-blur:  ;
   --tw-brightness:  ;
   --tw-contrast:  ;
   --tw-grayscale:  ;
   --tw-hue-rotate:  ;
   --tw-invert:  ;
   --tw-saturate:  ;
   --tw-sepia:  ;
   --tw-drop-shadow:  ;
   --tw-backdrop-blur:  ;
   --tw-backdrop-brightness:  ;
   --tw-backdrop-contrast:  ;
   --tw-backdrop-grayscale:  ;
   --tw-backdrop-hue-rotate:  ;
   --tw-backdrop-invert:  ;
   --tw-backdrop-opacity:  ;
   --tw-backdrop-saturate:  ;
   --tw-backdrop-sepia:  ;
   --tw-contain-size:  ;
   --tw-contain-layout:  ;
   --tw-contain-paint:  ;
   --tw-contain-style:  ;
   }/*
   ! tailwindcss v3.4.14 | MIT License | https://tailwindcss.com
   *//*
   1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
   2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
   */
   *,
   ::before,
   ::after {
   box-sizing: border-box; /* 1 */
   border-width: 0; /* 2 */
   border-style: solid; /* 2 */
   border-color: #e5e7eb; /* 2 */
   }
   ::before,
   ::after {
   --tw-content: '';
   }
   /*
   1. Use a consistent sensible line-height in all browsers.
   2. Prevent adjustments of font size after orientation changes in iOS.
   3. Use a more readable tab size.
   4. Use the user's configured `sans` font-family by default.
   5. Use the user's configured `sans` font-feature-settings by default.
   6. Use the user's configured `sans` font-variation-settings by default.
   7. Disable tap highlights on iOS
   */
   html,
   :host {
   line-height: 1.5; /* 1 */
   -webkit-text-size-adjust: 100%; /* 2 */
   -moz-tab-size: 4; /* 3 */
   -o-tab-size: 4;
   tab-size: 4; /* 3 */
   font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
   font-feature-settings: normal; /* 5 */
   font-variation-settings: normal; /* 6 */
   -webkit-tap-highlight-color: transparent; /* 7 */
   }
   /*
   1. Remove the margin in all browsers.
   2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
   */
   body {
   margin: 0; /* 1 */
   line-height: inherit; /* 2 */
   }
   /*
   1. Add the correct height in Firefox.
   2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
   3. Ensure horizontal rules are visible by default.
   */
   hr {
   height: 0; /* 1 */
   color: inherit; /* 2 */
   border-top-width: 1px; /* 3 */
   }
   /*
   Add the correct text decoration in Chrome, Edge, and Safari.
   */
   abbr:where([title]) {
   -webkit-text-decoration: underline dotted;
   text-decoration: underline dotted;
   }
   /*
   Remove the default font size and weight for headings.
   */
   h1,
   h2,
   h3,
   h4,
   h5,
   h6 {
   font-size: inherit;
   font-weight: inherit;
   }
   /*
   Reset links to optimize for opt-in styling instead of opt-out.
   */
   a {
   color: inherit;
   text-decoration: inherit;
   }
   /*
   Add the correct font weight in Edge and Safari.
   */
   b,
   strong {
   font-weight: bolder;
   }
   /*
   1. Use the user's configured `mono` font-family by default.
   2. Use the user's configured `mono` font-feature-settings by default.
   3. Use the user's configured `mono` font-variation-settings by default.
   4. Correct the odd `em` font sizing in all browsers.
   */
   code,
   kbd,
   samp,
   pre {
   font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
   font-feature-settings: normal; /* 2 */
   font-variation-settings: normal; /* 3 */
   font-size: 1em; /* 4 */
   }
   /*
   Add the correct font size in all browsers.
   */
   small {
   font-size: 80%;
   }
   /*
   Prevent `sub` and `sup` elements from affecting the line height in all browsers.
   */
   sub,
   sup {
   font-size: 75%;
   line-height: 0;
   position: relative;
   vertical-align: baseline;
   }
   sub {
   bottom: -0.25em;
   }
   sup {
   top: -0.5em;
   }
   /*
   1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
   2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
   3. Remove gaps between table borders by default.
   */
   table {
   text-indent: 0; /* 1 */
   border-color: inherit; /* 2 */
   border-collapse: collapse; /* 3 */
   }
   /*
   1. Change the font styles in all browsers.
   2. Remove the margin in Firefox and Safari.
   3. Remove default padding in all browsers.
   */
   button,
   input,
   optgroup,
   select,
   textarea {
   font-family: inherit; /* 1 */
   font-feature-settings: inherit; /* 1 */
   font-variation-settings: inherit; /* 1 */
   font-size: 100%; /* 1 */
   font-weight: inherit; /* 1 */
   line-height: inherit; /* 1 */
   letter-spacing: inherit; /* 1 */
   color: inherit; /* 1 */
   margin: 0; /* 2 */
   padding: 0; /* 3 */
   }
   /*
   Remove the inheritance of text transform in Edge and Firefox.
   */
   button,
   select {
   text-transform: none;
   }
   /*
   1. Correct the inability to style clickable types in iOS and Safari.
   2. Remove default button styles.
   */
   button,
   input:where([type='button']),
   input:where([type='reset']),
   input:where([type='submit']) {
   -webkit-appearance: button; /* 1 */
   background-color: transparent; /* 2 */
   background-image: none; /* 2 */
   }
   /*
   Use the modern Firefox focus style for all focusable elements.
   */
   :-moz-focusring {
   outline: auto;
   }
   /*
   Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
   */
   :-moz-ui-invalid {
   box-shadow: none;
   }
   /*
   Add the correct vertical alignment in Chrome and Firefox.
   */
   progress {
   vertical-align: baseline;
   }
   /*
   Correct the cursor style of increment and decrement buttons in Safari.
   */
   ::-webkit-inner-spin-button,
   ::-webkit-outer-spin-button {
   height: auto;
   }
   /*
   1. Correct the odd appearance in Chrome and Safari.
   2. Correct the outline style in Safari.
   */
   [type='search'] {
   -webkit-appearance: textfield; /* 1 */
   outline-offset: -2px; /* 2 */
   }
   /*
   Remove the inner padding in Chrome and Safari on macOS.
   */
   ::-webkit-search-decoration {
   -webkit-appearance: none;
   }
   /*
   1. Correct the inability to style clickable types in iOS and Safari.
   2. Change font properties to `inherit` in Safari.
   */
   ::-webkit-file-upload-button {
   -webkit-appearance: button; /* 1 */
   font: inherit; /* 2 */
   }
   /*
   Add the correct display in Chrome and Safari.
   */
   summary {
   display: list-item;
   }
   /*
   Removes the default spacing and border for appropriate elements.
   */
   blockquote,
   dl,
   dd,
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   hr,
   figure,
   p,
   pre {
   margin: 0;
   }
   fieldset {
   margin: 0;
   padding: 0;
   }
   legend {
   padding: 0;
   }
   ol,
   ul,
   menu {
   list-style: none;
   margin: 0;
   padding: 0;
   }
   /*
   Reset default styling for dialogs.
   */
   dialog {
   padding: 0;
   }
   /*
   Prevent resizing textareas horizontally by default.
   */
   textarea {
   resize: vertical;
   }
   /*
   1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
   2. Set the default placeholder color to the user's configured gray 400 color.
   */
   input::-moz-placeholder, textarea::-moz-placeholder {
   opacity: 1; /* 1 */
   color: #9ca3af; /* 2 */
   }
   input::placeholder,
   textarea::placeholder {
   opacity: 1; /* 1 */
   color: #9ca3af; /* 2 */
   }
   /*
   Set the default cursor for buttons.
   */
   button,
   [role="button"] {
   cursor: pointer;
   }
   /*
   Make sure disabled buttons don't get the pointer cursor.
   */
   :disabled {
   cursor: default;
   }
   /*
   1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
   2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
   */
   img,
   svg,
   video,
   canvas,
   audio,
   iframe,
   embed,
   object {
   display: block; /* 1 */
   vertical-align: middle; /* 2 */
   }
   /*
   Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
   */
   img,
   video {
   max-width: 100%;
   height: auto;
   }
   /* Make elements with the HTML hidden attribute stay hidden by default */
   [hidden]:where(:not([hidden="until-found"])) {
   display: none;
   }
   :root,
   [data-theme] {
   background-color: var(--fallback-b1,oklch(var(--b1)/1));
   color: var(--fallback-bc,oklch(var(--bc)/1));
   }
   @supports not (color: oklch(0% 0 0)) {
   :root {
   color-scheme: light;
   --fallback-p: #491eff;
   --fallback-pc: #d4dbff;
   --fallback-s: #ff41c7;
   --fallback-sc: #fff9fc;
   --fallback-a: #00cfbd;
   --fallback-ac: #00100d;
   --fallback-n: #2b3440;
   --fallback-nc: #d7dde4;
   --fallback-b1: #ffffff;
   --fallback-b2: #e5e6e6;
   --fallback-b3: #e5e6e6;
   --fallback-bc: #1f2937;
   --fallback-in: #00b3f0;
   --fallback-inc: #000000;
   --fallback-su: #00ca92;
   --fallback-suc: #000000;
   --fallback-wa: #ffc22d;
   --fallback-wac: #000000;
   --fallback-er: #ff6f70;
   --fallback-erc: #000000;
   }
   @media (prefers-color-scheme: dark) {
   :root {
   color-scheme: dark;
   --fallback-p: #7582ff;
   --fallback-pc: #050617;
   --fallback-s: #ff71cf;
   --fallback-sc: #190211;
   --fallback-a: #00c7b5;
   --fallback-ac: #000e0c;
   --fallback-n: #2a323c;
   --fallback-nc: #a6adbb;
   --fallback-b1: #1d232a;
   --fallback-b2: #191e24;
   --fallback-b3: #15191e;
   --fallback-bc: #a6adbb;
   --fallback-in: #00b3f0;
   --fallback-inc: #000000;
   --fallback-su: #00ca92;
   --fallback-suc: #000000;
   --fallback-wa: #ffc22d;
   --fallback-wac: #000000;
   --fallback-er: #ff6f70;
   --fallback-erc: #000000;
   }
   }
   }
   html {
   -webkit-tap-highlight-color: transparent;
   }
   * {
   scrollbar-color: color-mix(in oklch, currentColor 35%, transparent) transparent;
   }
   *:hover {
   scrollbar-color: color-mix(in oklch, currentColor 60%, transparent) transparent;
   }
   :root {
   color-scheme: dark;
   --pc: 86.736% 0 0;
   --sc: 86.736% 0 0;
   --ac: 86.736% 0 0;
   --nc: 86.736% 0 0;
   --inc: 89.0403% 0.062643 264.052021;
   --suc: 90.395% 0.035372 142.495339;
   --wac: 19.3597% 0.042201 109.769232;
   --erc: 12.5591% 0.051537 29.233885;
   --border-btn: 1px;
   --tab-border: 1px;
   --p: 33.6799% 0 0;
   --s: 33.6799% 0 0;
   --a: 33.6799% 0 0;
   --b1: 0% 0 0;
   --b2: 19.1251% 0 0;
   --b3: 26.8618% 0 0;
   --bc: 87.6096% 0 0;
   --n: 33.6799% 0 0;
   --in: 45.2014% 0.313214 264.052021;
   --su: 51.9752% 0.176858 142.495339;
   --wa: 96.7983% 0.211006 109.769232;
   --er: 62.7955% 0.257683 29.233885;
   --rounded-box: 0;
   --rounded-btn: 0;
   --rounded-badge: 0;
   --animation-btn: 0;
   --animation-input: 0;
   --btn-focus-scale: 1;
   --tab-radius: 0;
   }
   [data-theme=black] {
   color-scheme: dark;
   --pc: 86.736% 0 0;
   --sc: 86.736% 0 0;
   --ac: 86.736% 0 0;
   --nc: 86.736% 0 0;
   --inc: 89.0403% 0.062643 264.052021;
   --suc: 90.395% 0.035372 142.495339;
   --wac: 19.3597% 0.042201 109.769232;
   --erc: 12.5591% 0.051537 29.233885;
   --border-btn: 1px;
   --tab-border: 1px;
   --p: 33.6799% 0 0;
   --s: 33.6799% 0 0;
   --a: 33.6799% 0 0;
   --b1: 0% 0 0;
   --b2: 19.1251% 0 0;
   --b3: 26.8618% 0 0;
   --bc: 87.6096% 0 0;
   --n: 33.6799% 0 0;
   --in: 45.2014% 0.313214 264.052021;
   --su: 51.9752% 0.176858 142.495339;
   --wa: 96.7983% 0.211006 109.769232;
   --er: 62.7955% 0.257683 29.233885;
   --rounded-box: 0;
   --rounded-btn: 0;
   --rounded-badge: 0;
   --animation-btn: 0;
   --animation-input: 0;
   --btn-focus-scale: 1;
   --tab-radius: 0;
   }
   [data-theme=light] {
   color-scheme: light;
   --in: 72.06% 0.191 231.6;
   --su: 64.8% 0.150 160;
   --wa: 84.71% 0.199 83.87;
   --er: 71.76% 0.221 22.18;
   --pc: 89.824% 0.06192 275.75;
   --ac: 15.352% 0.0368 183.61;
   --inc: 0% 0 0;
   --suc: 0% 0 0;
   --wac: 0% 0 0;
   --erc: 0% 0 0;
   --rounded-box: 1rem;
   --rounded-btn: 0.5rem;
   --rounded-badge: 1.9rem;
   --animation-btn: 0.25s;
   --animation-input: .2s;
   --btn-focus-scale: 0.95;
   --border-btn: 1px;
   --tab-border: 1px;
   --tab-radius: 0.5rem;
   --p: 49.12% 0.3096 275.75;
   --s: 69.71% 0.329 342.55;
   --sc: 98.71% 0.0106 342.55;
   --a: 76.76% 0.184 183.61;
   --n: 32.1785% 0.02476 255.701624;
   --nc: 89.4994% 0.011585 252.096176;
   --b1: 100% 0 0;
   --b2: 96.1151% 0 0;
   --b3: 92.4169% 0.00108 197.137559;
   --bc: 27.8078% 0.029596 256.847952;
   }
   .alert {
   display: grid;
   width: 100%;
   grid-auto-flow: row;
   align-content: flex-start;
   align-items: center;
   justify-items: center;
   gap: 1rem;
   text-align: center;
   border-radius: var(--rounded-box, 1rem);
   border-width: 1px;
   --tw-border-opacity: 1;
   border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
   padding: 1rem;
   --tw-text-opacity: 1;
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
   --alert-bg: var(--fallback-b2,oklch(var(--b2)/1));
   --alert-bg-mix: var(--fallback-b1,oklch(var(--b1)/1));
   background-color: var(--alert-bg);
   }
   @media (min-width: 640px) {
   .alert {
   grid-auto-flow: column;
   grid-template-columns: auto minmax(auto,1fr);
   justify-items: start;
   text-align: start;
   }
   }
   .avatar {
   position: relative;
   display: inline-flex;
   }
   .avatar > div {
   display: block;
   aspect-ratio: 1 / 1;
   overflow: hidden;
   }
   .avatar img {
   height: 100%;
   width: 100%;
   -o-object-fit: cover;
   object-fit: cover;
   }
   .avatar.placeholder > div {
   display: flex;
   align-items: center;
   justify-content: center;
   }
   .badge {
   display: inline-flex;
   align-items: center;
   justify-content: center;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
   transition-duration: 200ms;
   height: 1.25rem;
   font-size: 0.875rem;
   line-height: 1.25rem;
   width: -moz-fit-content;
   width: fit-content;
   padding-left: 0.563rem;
   padding-right: 0.563rem;
   border-radius: var(--rounded-badge, 1.9rem);
   border-width: 1px;
   --tw-border-opacity: 1;
   border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
   --tw-text-opacity: 1;
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
   }
   @media (hover:hover) {
   .label a:hover {
   --tw-text-opacity: 1;
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
   }
   .menu li > *:not(ul, .menu-title, details, .btn):active,
   .menu li > *:not(ul, .menu-title, details, .btn).active,
   .menu li > details > summary:active {
   --tw-bg-opacity: 1;
   background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
   --tw-text-opacity: 1;
   color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
   }
   }
   .btn {
   display: inline-flex;
   height: 3rem;
   min-height: 3rem;
   flex-shrink: 0;
   cursor: pointer;
   -webkit-user-select: none;
   -moz-user-select: none;
   user-select: none;
   flex-wrap: wrap;
   align-items: center;
   justify-content: center;
   border-radius: var(--rounded-btn, 0.5rem);
   border-color: transparent;
   border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
   padding-left: 1rem;
   padding-right: 1rem;
   text-align: center;
   font-size: 0.875rem;
   line-height: 1em;
   gap: 0.5rem;
   font-weight: 600;
   text-decoration-line: none;
   transition-duration: 200ms;
   transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
   border-width: var(--border-btn, 1px);
   transition-property: color, background-color, border-color, opacity, box-shadow, transform;
   --tw-text-opacity: 1;
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
   --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
   --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
   box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
   outline-color: var(--fallback-bc,oklch(var(--bc)/1));
   background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
   --tw-bg-opacity: 1;
   --tw-border-opacity: 1;
   }
   .btn-disabled,
   .btn[disabled],
   .btn:disabled {
   pointer-events: none;
   }
   .btn-circle {
   height: 3rem;
   width: 3rem;
   border-radius: 9999px;
   padding: 0px;
   }
   :where(.btn:is(input[type="checkbox"])),
   :where(.btn:is(input[type="radio"])) {
   width: auto;
   -webkit-appearance: none;
   -moz-appearance: none;
   appearance: none;
   }
   .btn:is(input[type="checkbox"]):after,
   .btn:is(input[type="radio"]):after {
   --tw-content: attr(aria-label);
   content: var(--tw-content);
   }
   .carousel {
   display: inline-flex;
   overflow-x: scroll;
   scroll-snap-type: x mandatory;
   scroll-behavior: smooth;
   -ms-overflow-style: none;
   scrollbar-width: none;
   }
   .carousel-item {
   box-sizing: content-box;
   display: flex;
   flex: none;
   scroll-snap-align: start;
   }
   .carousel-start .carousel-item {
   scroll-snap-align: start;
   }
   .carousel-center .carousel-item {
   scroll-snap-align: center;
   }
   .carousel-end .carousel-item {
   scroll-snap-align: end;
   }
   .checkbox {
   flex-shrink: 0;
   --chkbg: var(--fallback-bc,oklch(var(--bc)/1));
   --chkfg: var(--fallback-b1,oklch(var(--b1)/1));
   height: 1.5rem;
   width: 1.5rem;
   cursor: pointer;
   -webkit-appearance: none;
   -moz-appearance: none;
   appearance: none;
   border-radius: var(--rounded-btn, 0.5rem);
   border-width: 1px;
   border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity)));
   --tw-border-opacity: 0.2;
   }
   :root .countdown {
   line-height: 1em;
   }
   .countdown {
   display: inline-flex;
   }
   .countdown > * {
   height: 1em;
   display: inline-block;
   overflow-y: hidden;
   }
   .countdown > *:before {
   position: relative;
   content: "00\A 01\A 02\A 03\A 04\A 05\A 06\A 07\A 08\A 09\A 10\A 11\A 12\A 13\A 14\A 15\A 16\A 17\A 18\A 19\A 20\A 21\A 22\A 23\A 24\A 25\A 26\A 27\A 28\A 29\A 30\A 31\A 32\A 33\A 34\A 35\A 36\A 37\A 38\A 39\A 40\A 41\A 42\A 43\A 44\A 45\A 46\A 47\A 48\A 49\A 50\A 51\A 52\A 53\A 54\A 55\A 56\A 57\A 58\A 59\A 60\A 61\A 62\A 63\A 64\A 65\A 66\A 67\A 68\A 69\A 70\A 71\A 72\A 73\A 74\A 75\A 76\A 77\A 78\A 79\A 80\A 81\A 82\A 83\A 84\A 85\A 86\A 87\A 88\A 89\A 90\A 91\A 92\A 93\A 94\A 95\A 96\A 97\A 98\A 99\A";
   white-space: pre;
   top: calc(var(--value) * -1em);
   text-align: center;
   transition: all 1s cubic-bezier(1, 0, 0, 1);
   }
   .diff {
   position: relative;
   display: grid;
   width: 100%;
   overflow: hidden;
   container-type: inline-size;
   grid-template-columns: auto 1fr;
   }
   .divider {
   display: flex;
   flex-direction: row;
   align-items: center;
   align-self: stretch;
   margin-top: 1rem;
   margin-bottom: 1rem;
   height: 1rem;
   white-space: nowrap;
   }
   .divider:before,
   .divider:after {
   height: 0.125rem;
   width: 100%;
   flex-grow: 1;
   --tw-content: '';
   content: var(--tw-content);
   background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
   }
   .drawer-side {
   pointer-events: none;
   position: fixed;
   inset-inline-start: 0px;
   top: 0px;
   grid-column-start: 1;
   grid-row-start: 1;
   display: grid;
   width: 100%;
   grid-template-columns: repeat(1, minmax(0, 1fr));
   grid-template-rows: repeat(1, minmax(0, 1fr));
   align-items: flex-start;
   justify-items: start;
   overflow-x: hidden;
   overflow-y: hidden;
   overscroll-behavior: contain;
   height: 100vh;
   height: 100dvh;
   }
   .drawer-side > .drawer-overlay {
   position: sticky;
   top: 0px;
   place-self: stretch;
   cursor: pointer;
   background-color: transparent;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
   transition-duration: 200ms;
   }
   .drawer-side > * {
   grid-column-start: 1;
   grid-row-start: 1;
   }
   .drawer-side > *:not(.drawer-overlay) {
   transition-property: transform;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
   transition-duration: 300ms;
   will-change: transform;
   transform: translateX(-100%);
   }
   [dir="rtl"] .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(100%);
   }
   .drawer-toggle {
   position: fixed;
   height: 0px;
   width: 0px;
   -webkit-appearance: none;
   -moz-appearance: none;
   appearance: none;
   opacity: 0;
   }
   .drawer-toggle:checked ~ .drawer-side {
   pointer-events: auto;
   visibility: visible;
   overflow-y: auto;
   }
   .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(0%);
   }
   .drawer-end > .drawer-toggle ~ .drawer-content {
   grid-column-start: 1;
   }
   .drawer-end > .drawer-toggle ~ .drawer-side {
   grid-column-start: 2;
   justify-items: end;
   }
   .drawer-end > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(100%);
   }
   [dir="rtl"] .drawer-end > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(-100%);
   }
   .drawer-end > .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(0%);
   }
   .dropdown {
   position: relative;
   display: inline-block;
   }
   .dropdown > *:not(summary):focus {
   outline: 2px solid transparent;
   outline-offset: 2px;
   }
   .dropdown .dropdown-content {
   position: absolute;
   }
   .dropdown:is(:not(details)) .dropdown-content {
   visibility: hidden;
   opacity: 0;
   transform-origin: top;
   --tw-scale-x: .95;
   --tw-scale-y: .95;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
   transition-duration: 200ms;
   }
   .dropdown-end .dropdown-content {
   inset-inline-end: 0px;
   }
   .dropdown-left .dropdown-content {
   bottom: auto;
   inset-inline-end: 100%;
   top: 0px;
   transform-origin: right;
   }
   .dropdown-right .dropdown-content {
   bottom: auto;
   inset-inline-start: 100%;
   top: 0px;
   transform-origin: left;
   }
   .dropdown-bottom .dropdown-content {
   bottom: auto;
   top: 100%;
   transform-origin: top;
   }
   .dropdown-top .dropdown-content {
   bottom: 100%;
   top: auto;
   transform-origin: bottom;
   }
   .dropdown-end.dropdown-right .dropdown-content {
   bottom: 0px;
   top: auto;
   }
   .dropdown-end.dropdown-left .dropdown-content {
   bottom: 0px;
   top: auto;
   }
   .dropdown.dropdown-open .dropdown-content,
   .dropdown:not(.dropdown-hover):focus .dropdown-content,
   .dropdown:focus-within .dropdown-content {
   visibility: visible;
   opacity: 1;
   }
   @media (hover: hover) {
   .dropdown.dropdown-hover:hover .dropdown-content {
   visibility: visible;
   opacity: 1;
   }
   .btm-nav > *.disabled:hover,
   .btm-nav > *[disabled]:hover {
   pointer-events: none;
   --tw-border-opacity: 0;
   background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
   --tw-bg-opacity: 0.1;
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
   --tw-text-opacity: 0.2;
   }
   .btn:hover {
   --tw-border-opacity: 1;
   border-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-border-opacity)));
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
   }
   @supports (color: color-mix(in oklab, black, black)) {
   .btn:hover {
   background-color: color-mix(
   in oklab,
   oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
   black
   );
   border-color: color-mix(
   in oklab,
   oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
   black
   );
   }
   }
   @supports not (color: oklch(0% 0 0)) {
   .btn:hover {
   background-color: var(--btn-color, var(--fallback-b2));
   border-color: var(--btn-color, var(--fallback-b2));
   }
   }
   .btn.glass:hover {
   --glass-opacity: 25%;
   --glass-border-opacity: 15%;
   }
   .btn-ghost:hover {
   border-color: transparent;
   }
   @supports (color: oklch(0% 0 0)) {
   .btn-ghost:hover {
   background-color: var(--fallback-bc,oklch(var(--bc)/0.2));
   }
   }
   .btn-outline.btn-primary:hover {
   --tw-text-opacity: 1;
   color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
   }
   @supports (color: color-mix(in oklab, black, black)) {
   .btn-outline.btn-primary:hover {
   background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
   border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
   }
   }
   .btn-disabled:hover,
   .btn[disabled]:hover,
   .btn:disabled:hover {
   --tw-border-opacity: 0;
   background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
   --tw-bg-opacity: 0.2;
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
   --tw-text-opacity: 0.2;
   }
   @supports (color: color-mix(in oklab, black, black)) {
   .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
   background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
   border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
   }
   }
   .dropdown.dropdown-hover:hover .dropdown-content {
   --tw-scale-x: 1;
   --tw-scale-y: 1;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   :where(.menu li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title)):not(.active, .btn):hover, :where(.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.active, .btn):hover {
   cursor: pointer;
   outline: 2px solid transparent;
   outline-offset: 2px;
   }
   @supports (color: oklch(0% 0 0)) {
   :where(.menu li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title)):not(.active, .btn):hover, :where(.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.active, .btn):hover {
   background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
   }
   }
   }
   .dropdown:is(details) summary::-webkit-details-marker {
   display: none;
   }
   .footer {
   display: grid;
   width: 100%;
   grid-auto-flow: row;
   place-items: start;
   -moz-column-gap: 1rem;
   column-gap: 1rem;
   row-gap: 2.5rem;
   font-size: 0.875rem;
   line-height: 1.25rem;
   }
   .footer > * {
   display: grid;
   place-items: start;
   gap: 0.5rem;
   }
   @media (min-width: 48rem) {
   .footer {
   grid-auto-flow: column;
   }
   .footer-center {
   grid-auto-flow: row dense;
   }
   }
   .label {
   display: flex;
   -webkit-user-select: none;
   -moz-user-select: none;
   user-select: none;
   align-items: center;
   justify-content: space-between;
   padding-left: 0.25rem;
   padding-right: 0.25rem;
   padding-top: 0.5rem;
   padding-bottom: 0.5rem;
   }
   .hero {
   display: grid;
   width: 100%;
   place-items: center;
   background-size: cover;
   background-position: center;
   }
   .hero > * {
   grid-column-start: 1;
   grid-row-start: 1;
   }
   .input {
   flex-shrink: 1;
   -webkit-appearance: none;
   -moz-appearance: none;
   appearance: none;
   height: 3rem;
   padding-left: 1rem;
   padding-right: 1rem;
   font-size: 1rem;
   line-height: 2;
   line-height: 1.5rem;
   border-radius: var(--rounded-btn, 0.5rem);
   border-width: 1px;
   border-color: transparent;
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
   }
   .input[type="number"]::-webkit-inner-spin-button,
   .input-md[type="number"]::-webkit-inner-spin-button {
   margin-top: -1rem;
   margin-bottom: -1rem;
   margin-inline-end: -1rem;
   }
   .join {
   display: inline-flex;
   align-items: stretch;
   border-radius: var(--rounded-btn, 0.5rem);
   }
   .join :where(.join-item) {
   border-start-end-radius: 0;
   border-end-end-radius: 0;
   border-end-start-radius: 0;
   border-start-start-radius: 0;
   }
   .join .join-item:not(:first-child):not(:last-child),
   .join *:not(:first-child):not(:last-child) .join-item {
   border-start-end-radius: 0;
   border-end-end-radius: 0;
   border-end-start-radius: 0;
   border-start-start-radius: 0;
   }
   .join .join-item:first-child:not(:last-child),
   .join *:first-child:not(:last-child) .join-item {
   border-start-end-radius: 0;
   border-end-end-radius: 0;
   }
   .join .dropdown .join-item:first-child:not(:last-child),
   .join *:first-child:not(:last-child) .dropdown .join-item {
   border-start-end-radius: inherit;
   border-end-end-radius: inherit;
   }
   .join :where(.join-item:first-child:not(:last-child)),
   .join :where(*:first-child:not(:last-child) .join-item) {
   border-end-start-radius: inherit;
   border-start-start-radius: inherit;
   }
   .join .join-item:last-child:not(:first-child),
   .join *:last-child:not(:first-child) .join-item {
   border-end-start-radius: 0;
   border-start-start-radius: 0;
   }
   .join :where(.join-item:last-child:not(:first-child)),
   .join :where(*:last-child:not(:first-child) .join-item) {
   border-start-end-radius: inherit;
   border-end-end-radius: inherit;
   }
   @supports not selector(:has(*)) {
   :where(.join *) {
   border-radius: inherit;
   }
   }
   @supports selector(:has(*)) {
   :where(.join *:has(.join-item)) {
   border-radius: inherit;
   }
   }
   .link {
   cursor: pointer;
   text-decoration-line: underline;
   }
   .menu {
   display: flex;
   flex-direction: column;
   flex-wrap: wrap;
   font-size: 0.875rem;
   line-height: 1.25rem;
   padding: 0.5rem;
   }
   .menu :where(li ul) {
   position: relative;
   white-space: nowrap;
   margin-inline-start: 1rem;
   padding-inline-start: 0.5rem;
   }
   .menu :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
   display: grid;
   grid-auto-flow: column;
   align-content: flex-start;
   align-items: center;
   gap: 0.5rem;
   grid-auto-columns: minmax(auto, max-content) auto max-content;
   -webkit-user-select: none;
   -moz-user-select: none;
   user-select: none;
   }
   .menu li.disabled {
   cursor: not-allowed;
   -webkit-user-select: none;
   -moz-user-select: none;
   user-select: none;
   color: var(--fallback-bc,oklch(var(--bc)/0.3));
   }
   .menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
   display: none;
   }
   :where(.menu li) {
   position: relative;
   display: flex;
   flex-shrink: 0;
   flex-direction: column;
   flex-wrap: wrap;
   align-items: stretch;
   }
   :where(.menu li) .badge {
   justify-self: end;
   }
   .modal {
   pointer-events: none;
   position: fixed;
   inset: 0px;
   margin: 0px;
   display: grid;
   height: 100%;
   max-height: none;
   width: 100%;
   max-width: none;
   justify-items: center;
   padding: 0px;
   opacity: 0;
   overscroll-behavior: contain;
   z-index: 999;
   background-color: transparent;
   color: inherit;
   transition-duration: 200ms;
   transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
   transition-property: transform, opacity, visibility;
   overflow-y: hidden;
   }
   :where(.modal) {
   align-items: center;
   }
   .modal-box {
   max-height: calc(100vh - 5em);
   grid-column-start: 1;
   grid-row-start: 1;
   width: 91.666667%;
   max-width: 32rem;
   --tw-scale-x: .9;
   --tw-scale-y: .9;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   border-bottom-right-radius: var(--rounded-box, 1rem);
   border-bottom-left-radius: var(--rounded-box, 1rem);
   border-top-left-radius: var(--rounded-box, 1rem);
   border-top-right-radius: var(--rounded-box, 1rem);
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
   padding: 1.5rem;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
   transition-duration: 200ms;
   box-shadow: rgba(0, 0, 0, 0.25) 0px 25px 50px -12px;
   overflow-y: auto;
   overscroll-behavior: contain;
   }
   .modal-open,
   .modal:target,
   .modal-toggle:checked + .modal,
   .modal[open] {
   pointer-events: auto;
   visibility: visible;
   opacity: 1;
   }
   :root:has(:is(.modal-open, .modal:target, .modal-toggle:checked + .modal, .modal[open])) {
   overflow: hidden;
   scrollbar-gutter: stable;
   }
   .radio {
   flex-shrink: 0;
   --chkbg: var(--bc);
   height: 1.5rem;
   width: 1.5rem;
   cursor: pointer;
   -webkit-appearance: none;
   -moz-appearance: none;
   appearance: none;
   border-radius: 9999px;
   border-width: 1px;
   border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity)));
   --tw-border-opacity: 0.2;
   }
   .textarea {
   min-height: 3rem;
   flex-shrink: 1;
   padding-left: 1rem;
   padding-right: 1rem;
   padding-top: 0.5rem;
   padding-bottom: 0.5rem;
   font-size: 0.875rem;
   line-height: 1.25rem;
   line-height: 2;
   border-radius: var(--rounded-btn, 0.5rem);
   border-width: 1px;
   border-color: transparent;
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
   }
   .toast {
   position: fixed;
   display: flex;
   min-width: -moz-fit-content;
   min-width: fit-content;
   flex-direction: column;
   white-space: nowrap;
   gap: 0.5rem;
   padding: 1rem;
   }
   .avatar-group :where(.avatar) {
   overflow: hidden;
   border-radius: 9999px;
   border-width: 4px;
   --tw-border-opacity: 1;
   border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity)));
   }
   .badge-outline {
   border-color: currentColor;
   --tw-border-opacity: 0.5;
   background-color: transparent;
   color: currentColor;
   }
   .badge-outline.badge-neutral {
   --tw-text-opacity: 1;
   color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity)));
   }
   .badge-outline.badge-primary {
   --tw-text-opacity: 1;
   color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
   }
   .badge-outline.badge-secondary {
   --tw-text-opacity: 1;
   color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity)));
   }
   .badge-outline.badge-accent {
   --tw-text-opacity: 1;
   color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity)));
   }
   .badge-outline.badge-info {
   --tw-text-opacity: 1;
   color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity)));
   }
   .badge-outline.badge-success {
   --tw-text-opacity: 1;
   color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)));
   }
   .badge-outline.badge-warning {
   --tw-text-opacity: 1;
   color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity)));
   }
   .badge-outline.badge-error {
   --tw-text-opacity: 1;
   color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity)));
   }
   .btm-nav > *.disabled,
   .btm-nav > *[disabled] {
   pointer-events: none;
   --tw-border-opacity: 0;
   background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
   --tw-bg-opacity: 0.1;
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
   --tw-text-opacity: 0.2;
   }
   .btm-nav > * .label {
   font-size: 1rem;
   line-height: 1.5rem;
   }
   @media (prefers-reduced-motion: no-preference) {
   .btn {
   animation: button-pop var(--animation-btn, 0.25s) ease-out;
   }
   }
   .btn:active:hover,
   .btn:active:focus {
   animation: button-pop 0s ease-out;
   transform: scale(var(--btn-focus-scale, 0.97));
   }
   @supports not (color: oklch(0% 0 0)) {
   .btn {
   background-color: var(--btn-color, var(--fallback-b2));
   border-color: var(--btn-color, var(--fallback-b2));
   }
   .btn-primary {
   --btn-color: var(--fallback-p);
   }
   }
   @supports (color: color-mix(in oklab, black, black)) {
   .btn-outline.btn-primary.btn-active {
   background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
   border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
   }
   }
   .btn:focus-visible {
   outline-style: solid;
   outline-width: 2px;
   outline-offset: 2px;
   }
   .btn-primary {
   --tw-text-opacity: 1;
   color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
   outline-color: var(--fallback-p,oklch(var(--p)/1));
   }
   @supports (color: oklch(0% 0 0)) {
   .btn-primary {
   --btn-color: var(--p);
   }
   }
   .btn.glass {
   --tw-shadow: 0 0 #0000;
   --tw-shadow-colored: 0 0 #0000;
   box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
   outline-color: currentColor;
   }
   .btn.glass.btn-active {
   --glass-opacity: 25%;
   --glass-border-opacity: 15%;
   }
   .btn-ghost {
   border-width: 1px;
   border-color: transparent;
   background-color: transparent;
   color: currentColor;
   --tw-shadow: 0 0 #0000;
   --tw-shadow-colored: 0 0 #0000;
   box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
   outline-color: currentColor;
   }
   .btn-ghost.btn-active {
   border-color: transparent;
   background-color: var(--fallback-bc,oklch(var(--bc)/0.2));
   }
   .btn-outline.btn-primary {
   --tw-text-opacity: 1;
   color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)));
   }
   .btn-outline.btn-primary.btn-active {
   --tw-text-opacity: 1;
   color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
   }
   .btn.btn-disabled,
   .btn[disabled],
   .btn:disabled {
   --tw-border-opacity: 0;
   background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
   --tw-bg-opacity: 0.2;
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
   --tw-text-opacity: 0.2;
   }
   .btn:is(input[type="checkbox"]:checked),
   .btn:is(input[type="radio"]:checked) {
   --tw-border-opacity: 1;
   border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
   --tw-bg-opacity: 1;
   background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
   --tw-text-opacity: 1;
   color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
   }
   .btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
   outline-color: var(--fallback-p,oklch(var(--p)/1));
   }
   @keyframes button-pop {
   0% {
   transform: scale(var(--btn-focus-scale, 0.98));
   }
   40% {
   transform: scale(1.02);
   }
   100% {
   transform: scale(1);
   }
   }
   .carousel::-webkit-scrollbar {
   display: none;
   }
   .checkbox:focus {
   box-shadow: none;
   }
   .checkbox:focus-visible {
   outline-style: solid;
   outline-width: 2px;
   outline-offset: 2px;
   outline-color: var(--fallback-bc,oklch(var(--bc)/1));
   }
   .checkbox:disabled {
   border-width: 0px;
   cursor: not-allowed;
   border-color: transparent;
   --tw-bg-opacity: 1;
   background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
   opacity: 0.2;
   }
   .checkbox:checked,
   .checkbox[aria-checked="true"] {
   background-repeat: no-repeat;
   animation: checkmark var(--animation-input, 0.2s) ease-out;
   background-color: var(--chkbg);
   background-image: linear-gradient(-45deg, transparent 65%, var(--chkbg) 65.99%),
   linear-gradient(45deg, transparent 75%, var(--chkbg) 75.99%),
   linear-gradient(-45deg, var(--chkbg) 40%, transparent 40.99%),
   linear-gradient(
   45deg,
   var(--chkbg) 30%,
   var(--chkfg) 30.99%,
   var(--chkfg) 40%,
   transparent 40.99%
   ),
   linear-gradient(-45deg, var(--chkfg) 50%, var(--chkbg) 50.99%);
   }
   .checkbox:indeterminate {
   --tw-bg-opacity: 1;
   background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
   background-repeat: no-repeat;
   animation: checkmark var(--animation-input, 0.2s) ease-out;
   background-image: linear-gradient(90deg, transparent 80%, var(--chkbg) 80%),
   linear-gradient(-90deg, transparent 80%, var(--chkbg) 80%),
   linear-gradient(0deg, var(--chkbg) 43%, var(--chkfg) 43%, var(--chkfg) 57%, var(--chkbg) 57%);
   }
   @keyframes checkmark {
   0% {
   background-position-y: 5px;
   }
   50% {
   background-position-y: -2px;
   }
   100% {
   background-position-y: 0;
   }
   }
   .divider:not(:empty) {
   gap: 1rem;
   }
   .drawer-toggle:checked ~ .drawer-side > .drawer-overlay {
   background-color: #0006;
   }
   .drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
   outline-style: solid;
   outline-width: 2px;
   outline-offset: 2px;
   }
   .dropdown.dropdown-open .dropdown-content,
   .dropdown:focus .dropdown-content,
   .dropdown:focus-within .dropdown-content {
   --tw-scale-x: 1;
   --tw-scale-y: 1;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   .input input {
   --tw-bg-opacity: 1;
   background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
   background-color: transparent;
   }
   .input input:focus {
   outline: 2px solid transparent;
   outline-offset: 2px;
   }
   .input[list]::-webkit-calendar-picker-indicator {
   line-height: 1em;
   }
   .input-bordered {
   border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
   }
   .input:focus,
   .input:focus-within {
   box-shadow: none;
   border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
   outline-style: solid;
   outline-width: 2px;
   outline-offset: 2px;
   outline-color: var(--fallback-bc,oklch(var(--bc)/0.2));
   }
   .input-ghost {
   --tw-bg-opacity: 0.05;
   }
   .input-ghost:focus,
   .input-ghost:focus-within {
   --tw-bg-opacity: 1;
   --tw-text-opacity: 1;
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
   box-shadow: none;
   }
   .input:has(> input[disabled]),
   .input-disabled,
   .input:disabled,
   .input[disabled] {
   cursor: not-allowed;
   --tw-border-opacity: 1;
   border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
   color: var(--fallback-bc,oklch(var(--bc)/0.4));
   }
   .input:has(> input[disabled])::-moz-placeholder, .input-disabled::-moz-placeholder, .input:disabled::-moz-placeholder, .input[disabled]::-moz-placeholder {
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
   --tw-placeholder-opacity: 0.2;
   }
   .input:has(> input[disabled])::placeholder,
   .input-disabled::placeholder,
   .input:disabled::placeholder,
   .input[disabled]::placeholder {
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
   --tw-placeholder-opacity: 0.2;
   }
   .input:has(> input[disabled]) > input[disabled] {
   cursor: not-allowed;
   }
   .input::-webkit-date-and-time-value {
   text-align: inherit;
   }
   .join > :where(*:not(:first-child)) {
   margin-top: 0px;
   margin-bottom: 0px;
   margin-inline-start: -1px;
   }
   .join > :where(*:not(:first-child)):is(.btn) {
   margin-inline-start: calc(var(--border-btn) * -1);
   }
   .link:focus {
   outline: 2px solid transparent;
   outline-offset: 2px;
   }
   .link:focus-visible {
   outline: 2px solid currentColor;
   outline-offset: 2px;
   }
   .\!loading {
   pointer-events: none !important;
   display: inline-block !important;
   aspect-ratio: 1 / 1 !important;
   width: 1.5rem !important;
   background-color: currentColor !important;
   -webkit-mask-size: 100% !important;
   mask-size: 100% !important;
   -webkit-mask-repeat: no-repeat !important;
   mask-repeat: no-repeat !important;
   -webkit-mask-position: center !important;
   mask-position: center !important;
   -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E") !important;
   mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E") !important;
   }
   .loading {
   pointer-events: none;
   display: inline-block;
   aspect-ratio: 1 / 1;
   width: 1.5rem;
   background-color: currentColor;
   -webkit-mask-size: 100%;
   mask-size: 100%;
   -webkit-mask-repeat: no-repeat;
   mask-repeat: no-repeat;
   -webkit-mask-position: center;
   mask-position: center;
   -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
   mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
   }
   .loading-spinner {
   -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
   mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
   }
   :where(.menu li:empty) {
   --tw-bg-opacity: 1;
   background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
   opacity: 0.1;
   margin: 0.5rem 1rem;
   height: 1px;
   }
   .menu :where(li ul):before {
   position: absolute;
   bottom: 0.75rem;
   inset-inline-start: 0px;
   top: 0.75rem;
   width: 1px;
   --tw-bg-opacity: 1;
   background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
   opacity: 0.1;
   content: "";
   }
   .menu :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)),
   .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
   border-radius: var(--rounded-btn, 0.5rem);
   padding-left: 1rem;
   padding-right: 1rem;
   padding-top: 0.5rem;
   padding-bottom: 0.5rem;
   text-align: start;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
   transition-duration: 200ms;
   text-wrap: balance;
   }
   :where(.menu li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title)):not(summary, .active, .btn).focus, :where(.menu li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title)):not(summary, .active, .btn):focus, :where(.menu li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title)):is(summary):not(.active, .btn):focus-visible, :where(.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(summary, .active, .btn).focus, :where(.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(summary, .active, .btn):focus, :where(.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):is(summary):not(.active, .btn):focus-visible {
   cursor: pointer;
   background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
   --tw-text-opacity: 1;
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
   outline: 2px solid transparent;
   outline-offset: 2px;
   }
   .menu li > *:not(ul, .menu-title, details, .btn):active,
   .menu li > *:not(ul, .menu-title, details, .btn).active,
   .menu li > details > summary:active {
   --tw-bg-opacity: 1;
   background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
   --tw-text-opacity: 1;
   color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
   }
   .menu :where(li > details > summary)::-webkit-details-marker {
   display: none;
   }
   .menu :where(li > details > summary):after,
   .menu :where(li > .menu-dropdown-toggle):after {
   justify-self: end;
   display: block;
   margin-top: -0.5rem;
   height: 0.5rem;
   width: 0.5rem;
   transform: rotate(45deg);
   transition-property: transform, margin-top;
   transition-duration: 0.3s;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   content: "";
   transform-origin: 75% 75%;
   box-shadow: 2px 2px;
   pointer-events: none;
   }
   .menu :where(li > details[open] > summary):after,
   .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
   transform: rotate(225deg);
   margin-top: 0;
   }
   .mockup-phone .display {
   overflow: hidden;
   border-radius: 40px;
   margin-top: -25px;
   }
   .mockup-browser .mockup-browser-toolbar .input {
   position: relative;
   margin-left: auto;
   margin-right: auto;
   display: block;
   height: 1.75rem;
   width: 24rem;
   overflow: hidden;
   text-overflow: ellipsis;
   white-space: nowrap;
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
   padding-left: 2rem;
   direction: ltr;
   }
   .mockup-browser .mockup-browser-toolbar .input:before {
   content: "";
   position: absolute;
   left: 0.5rem;
   top: 50%;
   aspect-ratio: 1 / 1;
   height: 0.75rem;
   --tw-translate-y: -50%;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   border-radius: 9999px;
   border-width: 2px;
   border-color: currentColor;
   opacity: 0.6;
   }
   .mockup-browser .mockup-browser-toolbar .input:after {
   content: "";
   position: absolute;
   left: 1.25rem;
   top: 50%;
   height: 0.5rem;
   --tw-translate-y: 25%;
   --tw-rotate: -45deg;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   border-radius: 9999px;
   border-width: 1px;
   border-color: currentColor;
   opacity: 0.6;
   }
   .modal:not(dialog:not(.modal-open)),
   .modal::backdrop {
   background-color: #0006;
   animation: modal-pop 0.2s ease-out;
   }
   .modal-open .modal-box,
   .modal-toggle:checked + .modal .modal-box,
   .modal:target .modal-box,
   .modal[open] .modal-box {
   --tw-translate-y: 0px;
   --tw-scale-x: 1;
   --tw-scale-y: 1;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   @keyframes modal-pop {
   0% {
   opacity: 0;
   }
   }
   @keyframes progress-loading {
   50% {
   background-position-x: -115%;
   }
   }
   .radio:focus {
   box-shadow: none;
   }
   .radio:focus-visible {
   outline-style: solid;
   outline-width: 2px;
   outline-offset: 2px;
   outline-color: var(--fallback-bc,oklch(var(--bc)/1));
   }
   .radio:checked,
   .radio[aria-checked="true"] {
   --tw-bg-opacity: 1;
   background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
   background-image: none;
   animation: radiomark var(--animation-input, 0.2s) ease-out;
   box-shadow: 0 0 0 4px var(--fallback-b1,oklch(var(--b1)/1)) inset,
   0 0 0 4px var(--fallback-b1,oklch(var(--b1)/1)) inset;
   }
   .radio:disabled {
   cursor: not-allowed;
   opacity: 0.2;
   }
   @keyframes radiomark {
   0% {
   box-shadow: 0 0 0 12px var(--fallback-b1,oklch(var(--b1)/1)) inset,
   0 0 0 12px var(--fallback-b1,oklch(var(--b1)/1)) inset;
   }
   50% {
   box-shadow: 0 0 0 3px var(--fallback-b1,oklch(var(--b1)/1)) inset,
   0 0 0 3px var(--fallback-b1,oklch(var(--b1)/1)) inset;
   }
   100% {
   box-shadow: 0 0 0 4px var(--fallback-b1,oklch(var(--b1)/1)) inset,
   0 0 0 4px var(--fallback-b1,oklch(var(--b1)/1)) inset;
   }
   }
   @keyframes rating-pop {
   0% {
   transform: translateY(-0.125em);
   }
   40% {
   transform: translateY(-0.125em);
   }
   100% {
   transform: translateY(0);
   }
   }
   .skeleton {
   border-radius: var(--rounded-box, 1rem);
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
   will-change: background-position;
   animation: skeleton 1.8s ease-in-out infinite;
   background-image: linear-gradient(
   105deg,
   transparent 0%,
   transparent 40%,
   var(--fallback-b1,oklch(var(--b1)/1)) 50%,
   transparent 60%,
   transparent 100%
   );
   background-size: 200% auto;
   background-repeat: no-repeat;
   background-position-x: -50%;
   }
   @media (prefers-reduced-motion) {
   .skeleton {
   animation-duration: 15s;
   }
   }
   @keyframes skeleton {
   from {
   background-position: 150%;
   }
   to {
   background-position: -50%;
   }
   }
   .textarea:focus {
   box-shadow: none;
   border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
   outline-style: solid;
   outline-width: 2px;
   outline-offset: 2px;
   outline-color: var(--fallback-bc,oklch(var(--bc)/0.2));
   }
   .textarea-disabled,
   .textarea:disabled,
   .textarea[disabled] {
   cursor: not-allowed;
   --tw-border-opacity: 1;
   border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
   color: var(--fallback-bc,oklch(var(--bc)/0.4));
   }
   .textarea-disabled::-moz-placeholder, .textarea:disabled::-moz-placeholder, .textarea[disabled]::-moz-placeholder {
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
   --tw-placeholder-opacity: 0.2;
   }
   .textarea-disabled::placeholder,
   .textarea:disabled::placeholder,
   .textarea[disabled]::placeholder {
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
   --tw-placeholder-opacity: 0.2;
   }
   .toast > * {
   animation: toast-pop 0.25s ease-out;
   }
   @keyframes toast-pop {
   0% {
   transform: scale(0.9);
   opacity: 0;
   }
   100% {
   transform: scale(1);
   opacity: 1;
   }
   }
   .btn-sm {
   height: 2rem;
   min-height: 2rem;
   padding-left: 0.75rem;
   padding-right: 0.75rem;
   font-size: 0.875rem;
   }
   .btn-square:where(.btn-sm) {
   height: 2rem;
   width: 2rem;
   padding: 0px;
   }
   .btn-circle:where(.btn-xs) {
   height: 1.5rem;
   width: 1.5rem;
   border-radius: 9999px;
   padding: 0px;
   }
   .btn-circle:where(.btn-sm) {
   height: 2rem;
   width: 2rem;
   border-radius: 9999px;
   padding: 0px;
   }
   .btn-circle:where(.btn-md) {
   height: 3rem;
   width: 3rem;
   border-radius: 9999px;
   padding: 0px;
   }
   .btn-circle:where(.btn-lg) {
   height: 4rem;
   width: 4rem;
   border-radius: 9999px;
   padding: 0px;
   }
   .drawer-open > .drawer-toggle {
   display: none;
   }
   .drawer-open > .drawer-toggle ~ .drawer-side {
   pointer-events: auto;
   visibility: visible;
   position: sticky;
   display: block;
   width: auto;
   overscroll-behavior: auto;
   }
   .drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(0%);
   }
   [dir="rtl"] .drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(0%);
   }
   .drawer-open > .drawer-toggle:checked ~ .drawer-side {
   pointer-events: auto;
   visibility: visible;
   }
   .drawer-open > .drawer-side {
   overflow-y: auto;
   }
   html:has(.drawer-toggle:checked) {
   overflow-y: hidden;
   scrollbar-gutter: stable;
   }
   .join.join-vertical {
   flex-direction: column;
   }
   .join.join-vertical .join-item:first-child:not(:last-child),
   .join.join-vertical *:first-child:not(:last-child) .join-item {
   border-end-start-radius: 0;
   border-end-end-radius: 0;
   border-start-start-radius: inherit;
   border-start-end-radius: inherit;
   }
   .join.join-vertical .join-item:last-child:not(:first-child),
   .join.join-vertical *:last-child:not(:first-child) .join-item {
   border-start-start-radius: 0;
   border-start-end-radius: 0;
   border-end-start-radius: inherit;
   border-end-end-radius: inherit;
   }
   .join.join-horizontal {
   flex-direction: row;
   }
   .join.join-horizontal .join-item:first-child:not(:last-child),
   .join.join-horizontal *:first-child:not(:last-child) .join-item {
   border-end-end-radius: 0;
   border-start-end-radius: 0;
   border-end-start-radius: inherit;
   border-start-start-radius: inherit;
   }
   .join.join-horizontal .join-item:last-child:not(:first-child),
   .join.join-horizontal *:last-child:not(:first-child) .join-item {
   border-end-start-radius: 0;
   border-start-start-radius: 0;
   border-end-end-radius: inherit;
   border-start-end-radius: inherit;
   }
   .modal-middle {
   place-items: center;
   }
   :where(.toast) {
   bottom: 0px;
   inset-inline-end: 0px;
   inset-inline-start: auto;
   top: auto;
   --tw-translate-x: 0px;
   --tw-translate-y: 0px;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   .toast:where(.toast-start) {
   inset-inline-end: auto;
   inset-inline-start: 0px;
   --tw-translate-x: 0px;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   .toast:where(.toast-center) {
   inset-inline-end: 50%;
   inset-inline-start: 50%;
   --tw-translate-x: -50%;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   .toast:where(.toast-center):where([dir="rtl"], [dir="rtl"] *) {
   --tw-translate-x: 50%;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   .toast:where(.toast-end) {
   inset-inline-end: 0px;
   inset-inline-start: auto;
   --tw-translate-x: 0px;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   .toast:where(.toast-bottom) {
   bottom: 0px;
   top: auto;
   --tw-translate-y: 0px;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   .toast:where(.toast-middle) {
   bottom: auto;
   top: 50%;
   --tw-translate-y: -50%;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   .toast:where(.toast-top) {
   bottom: auto;
   top: 0px;
   --tw-translate-y: 0px;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   .tooltip {
   position: relative;
   display: inline-block;
   --tooltip-offset: calc(100% + 1px + var(--tooltip-tail, 0px));
   }
   .tooltip:before {
   position: absolute;
   pointer-events: none;
   z-index: 1;
   content: var(--tw-content);
   --tw-content: attr(data-tip);
   }
   .tooltip:before, .tooltip-top:before {
   transform: translateX(-50%);
   top: auto;
   left: 50%;
   right: auto;
   bottom: var(--tooltip-offset);
   }
   .avatar.online:before {
   content: "";
   position: absolute;
   z-index: 10;
   display: block;
   border-radius: 9999px;
   --tw-bg-opacity: 1;
   background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)));
   outline-style: solid;
   outline-width: 2px;
   outline-color: var(--fallback-b1,oklch(var(--b1)/1));
   width: 15%;
   height: 15%;
   top: 7%;
   right: 7%;
   }
   .avatar.offline:before {
   content: "";
   position: absolute;
   z-index: 10;
   display: block;
   border-radius: 9999px;
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
   outline-style: solid;
   outline-width: 2px;
   outline-color: var(--fallback-b1,oklch(var(--b1)/1));
   width: 15%;
   height: 15%;
   top: 7%;
   right: 7%;
   }
   .drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
   cursor: default;
   background-color: transparent;
   }
   .join.join-vertical > :where(*:not(:first-child)) {
   margin-left: 0px;
   margin-right: 0px;
   margin-top: -1px;
   }
   .join.join-vertical > :where(*:not(:first-child)):is(.btn) {
   margin-top: calc(var(--border-btn) * -1);
   }
   .join.join-horizontal > :where(*:not(:first-child)) {
   margin-top: 0px;
   margin-bottom: 0px;
   margin-inline-start: -1px;
   }
   .join.join-horizontal > :where(*:not(:first-child)):is(.btn) {
   margin-inline-start: calc(var(--border-btn) * -1);
   margin-top: 0px;
   }
   .modal-top :where(.modal-box) {
   width: 100%;
   max-width: none;
   --tw-translate-y: -2.5rem;
   --tw-scale-x: 1;
   --tw-scale-y: 1;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   border-bottom-right-radius: var(--rounded-box, 1rem);
   border-bottom-left-radius: var(--rounded-box, 1rem);
   border-top-left-radius: 0px;
   border-top-right-radius: 0px;
   }
   .modal-middle :where(.modal-box) {
   width: 91.666667%;
   max-width: 32rem;
   --tw-translate-y: 0px;
   --tw-scale-x: .9;
   --tw-scale-y: .9;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   border-top-left-radius: var(--rounded-box, 1rem);
   border-top-right-radius: var(--rounded-box, 1rem);
   border-bottom-right-radius: var(--rounded-box, 1rem);
   border-bottom-left-radius: var(--rounded-box, 1rem);
   }
   .modal-bottom :where(.modal-box) {
   width: 100%;
   max-width: none;
   --tw-translate-y: 2.5rem;
   --tw-scale-x: 1;
   --tw-scale-y: 1;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   border-top-left-radius: var(--rounded-box, 1rem);
   border-top-right-radius: var(--rounded-box, 1rem);
   border-bottom-right-radius: 0px;
   border-bottom-left-radius: 0px;
   }
   .tooltip {
   position: relative;
   display: inline-block;
   text-align: center;
   --tooltip-tail: 0.1875rem;
   --tooltip-color: var(--fallback-n,oklch(var(--n)/1));
   --tooltip-text-color: var(--fallback-nc,oklch(var(--nc)/1));
   --tooltip-tail-offset: calc(100% + 0.0625rem - var(--tooltip-tail));
   }
   .tooltip:before,
   .tooltip:after {
   opacity: 0;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
   transition-delay: 100ms;
   transition-duration: 200ms;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   }
   .tooltip:after {
   position: absolute;
   content: "";
   border-style: solid;
   border-width: var(--tooltip-tail, 0);
   width: 0;
   height: 0;
   display: block;
   }
   .tooltip:before {
   max-width: 20rem;
   white-space: normal;
   border-radius: 0.25rem;
   padding-left: 0.5rem;
   padding-right: 0.5rem;
   padding-top: 0.25rem;
   padding-bottom: 0.25rem;
   font-size: 0.875rem;
   line-height: 1.25rem;
   background-color: var(--tooltip-color);
   color: var(--tooltip-text-color);
   width: -moz-max-content;
   width: max-content;
   }
   .tooltip.tooltip-open:before {
   opacity: 1;
   transition-delay: 75ms;
   }
   .tooltip.tooltip-open:after {
   opacity: 1;
   transition-delay: 75ms;
   }
   .tooltip:hover:before {
   opacity: 1;
   transition-delay: 75ms;
   }
   .tooltip:hover:after {
   opacity: 1;
   transition-delay: 75ms;
   }
   .tooltip:has(:focus-visible):after,
   .tooltip:has(:focus-visible):before {
   opacity: 1;
   transition-delay: 75ms;
   }
   .tooltip:not([data-tip]):hover:before,
   .tooltip:not([data-tip]):hover:after {
   visibility: hidden;
   opacity: 0;
   }
   .tooltip:after, .tooltip-top:after {
   transform: translateX(-50%);
   border-color: var(--tooltip-color) transparent transparent transparent;
   top: auto;
   left: 50%;
   right: auto;
   bottom: var(--tooltip-tail-offset);
   }
   .fixed {
   position: fixed;
   }
   .absolute {
   position: absolute;
   }
   .relative {
   position: relative;
   }
   .sticky {
   position: sticky;
   }
   .inset-x-0 {
   left: 0px;
   right: 0px;
   }
   .bottom-24 {
   bottom: 6rem;
   }
   .bottom-\[-2px\] {
   bottom: -2px;
   }
   .left-0 {
   left: 0px;
   }
   .left-2 {
   left: 0.5rem;
   }
   .left-5 {
   left: 1.25rem;
   }
   .left-\[-3\.2vw\] {
   left: -3.2vw;
   }
   .left-\[-4vw\] {
   left: -4vw;
   }
   .right-0 {
   right: 0px;
   }
   .right-2 {
   right: 0.5rem;
   }
   .right-3 {
   right: 0.75rem;
   }
   .right-5 {
   right: 1.25rem;
   }
   .top-0 {
   top: 0px;
   }
   .top-1\/2 {
   top: 50%;
   }
   .top-2 {
   top: 0.5rem;
   }
   .top-5 {
   top: 1.25rem;
   }
   .top-\[20\%\] {
   top: 20%;
   }
   .top-\[30\%\] {
   top: 30%;
   }
   .top-\[40px\] {
   top: 40px;
   }
   .z-10 {
   z-index: 10;
   }
   .z-50 {
   z-index: 50;
   }
   .z-\[-1\] {
   z-index: -1;
   }
   .z-\[9999999\] {
   z-index: 9999999;
   }
   .z-\[999999\] {
   z-index: 999999;
   }
   .z-\[99999\] {
   z-index: 99999;
   }
   .z-\[9999\] {
   z-index: 9999;
   }
   .-mx-1 {
   margin-left: -0.25rem;
   margin-right: -0.25rem;
   }
   .mx-1 {
   margin-left: 0.25rem;
   margin-right: 0.25rem;
   }
   .mx-5 {
   margin-left: 1.25rem;
   margin-right: 1.25rem;
   }
   .mx-auto {
   margin-left: auto;
   margin-right: auto;
   }
   .my-1 {
   margin-top: 0.25rem;
   margin-bottom: 0.25rem;
   }
   .my-2 {
   margin-top: 0.5rem;
   margin-bottom: 0.5rem;
   }
   .-mt-12 {
   margin-top: -3rem;
   }
   .mb-12 {
   margin-bottom: 3rem;
   }
   .mb-5 {
   margin-bottom: 1.25rem;
   }
   .mb-\[120px\] {
   margin-bottom: 120px;
   }
   .ml-auto {
   margin-left: auto;
   }
   .mr-2 {
   margin-right: 0.5rem;
   }
   .mr-5 {
   margin-right: 1.25rem;
   }
   .mt-1 {
   margin-top: 0.25rem;
   }
   .mt-2 {
   margin-top: 0.5rem;
   }
   .mt-3 {
   margin-top: 0.75rem;
   }
   .mt-5 {
   margin-top: 1.25rem;
   }
   .block {
   display: block;
   }
   .flex {
   display: flex;
   }
   .hidden {
   display: none;
   }
   .size-6 {
   width: 1.5rem;
   height: 1.5rem;
   }
   .size-full {
   width: 100%;
   height: 100%;
   }
   .h-1 {
   height: 0.25rem;
   }
   .h-10 {
   height: 2.5rem;
   }
   .h-12 {
   height: 3rem;
   }
   .h-16 {
   height: 4rem;
   }
   .h-2 {
   height: 0.5rem;
   }
   .h-2\.5 {
   height: 0.625rem;
   }
   .h-20 {
   height: 5rem;
   }
   .h-24 {
   height: 6rem;
   }
   .h-3\.5 {
   height: 0.875rem;
   }
   .h-4 {
   height: 1rem;
   }
   .h-5 {
   height: 1.25rem;
   }
   .h-6 {
   height: 1.5rem;
   }
   .h-7 {
   height: 1.75rem;
   }
   .h-8 {
   height: 2rem;
   }
   .h-9 {
   height: 2.25rem;
   }
   .h-\[10rem\] {
   height: 10rem;
   }
   .h-\[2\.2rem\] {
   height: 2.2rem;
   }
   .h-\[200px\] {
   height: 200px;
   }
   .h-\[20rem\] {
   height: 20rem;
   }
   .h-\[2px\] {
   height: 2px;
   }
   .h-\[300px\] {
   height: 300px;
   }
   .h-\[400px\] {
   height: 400px;
   }
   .h-\[45vh\] {
   height: 45vh;
   }
   .h-\[4rem\] {
   height: 4rem;
   }
   .h-\[5rem\] {
   height: 5rem;
   }
   .h-\[6rem\] {
   height: 6rem;
   }
   .h-fit {
   height: -moz-fit-content;
   height: fit-content;
   }
   .h-full {
   height: 100%;
   }
   .h-px {
   height: 1px;
   }
   .h-screen {
   height: 100vh;
   }
   .max-h-\[100vh\] {
   max-height: 100vh;
   }
   .min-h-full {
   min-height: 100%;
   }
   .w-10 {
   width: 2.5rem;
   }
   .w-12 {
   width: 3rem;
   }
   .w-16 {
   width: 4rem;
   }
   .w-2 {
   width: 0.5rem;
   }
   .w-2\.5 {
   width: 0.625rem;
   }
   .w-20 {
   width: 5rem;
   }
   .w-24 {
   width: 6rem;
   }
   .w-3 {
   width: 0.75rem;
   }
   .w-3\.5 {
   width: 0.875rem;
   }
   .w-32 {
   width: 8rem;
   }
   .w-4 {
   width: 1rem;
   }
   .w-5 {
   width: 1.25rem;
   }
   .w-6 {
   width: 1.5rem;
   }
   .w-64 {
   width: 16rem;
   }
   .w-7 {
   width: 1.75rem;
   }
   .w-8 {
   width: 2rem;
   }
   .w-80 {
   width: 20rem;
   }
   .w-\[100vw\] {
   width: 100vw;
   }
   .w-\[16rem\] {
   width: 16rem;
   }
   .w-\[27rem\] {
   width: 27rem;
   }
   .w-\[5rem\] {
   width: 5rem;
   }
   .w-fit {
   width: -moz-fit-content;
   width: fit-content;
   }
   .w-full {
   width: 100%;
   }
   .w-px {
   width: 1px;
   }
   .w-screen {
   width: 100vw;
   }
   .min-w-\[12rem\] {
   min-width: 12rem;
   }
   .min-w-\[8rem\] {
   min-width: 8rem;
   }
   .max-w-\[100vw\] {
   max-width: 100vw;
   }
   .origin-\[--kb-menu-content-transform-origin\] {
   transform-origin: var(--kb-menu-content-transform-origin);
   }
   .-translate-y-1\/2 {
   --tw-translate-y: -50%;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   .translate-x-0 {
   --tw-translate-x: 0px;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   .transform {
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   }
   .cursor-default {
   cursor: default;
   }
   .cursor-pointer {
   cursor: pointer;
   }
   .select-none {
   -webkit-user-select: none;
   -moz-user-select: none;
   user-select: none;
   }
   .resize-none {
   resize: none;
   }
   .resize {
   resize: both;
   }
   .flex-row {
   flex-direction: row;
   }
   .flex-col {
   flex-direction: column;
   }
   .items-start {
   align-items: flex-start;
   }
   .items-center {
   align-items: center;
   }
   .justify-center {
   justify-content: center;
   }
   .justify-between {
   justify-content: space-between;
   }
   .gap-1 {
   gap: 0.25rem;
   }
   .gap-12 {
   gap: 3rem;
   }
   .gap-2 {
   gap: 0.5rem;
   }
   .gap-3 {
   gap: 0.75rem;
   }
   .gap-4 {
   gap: 1rem;
   }
   .gap-5 {
   gap: 1.25rem;
   }
   .space-x-1 > :not([hidden]) ~ :not([hidden]) {
   --tw-space-x-reverse: 0;
   margin-right: calc(0.25rem * var(--tw-space-x-reverse));
   margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
   }
   .space-y-0 > :not([hidden]) ~ :not([hidden]) {
   --tw-space-y-reverse: 0;
   margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
   margin-bottom: calc(0px * var(--tw-space-y-reverse));
   }
   .space-y-1\.5 > :not([hidden]) ~ :not([hidden]) {
   --tw-space-y-reverse: 0;
   margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
   margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
   }
   .self-center {
   align-self: center;
   }
   .overflow-hidden {
   overflow: hidden;
   }
   .rounded {
   border-radius: 0.25rem;
   }
   .rounded-\[\.4rem\] {
   border-radius: .4rem;
   }
   .rounded-box {
   border-radius: var(--rounded-box, 1rem);
   }
   .rounded-full {
   border-radius: 9999px;
   }
   .rounded-lg {
   border-radius: var(--radius);
   }
   .rounded-md {
   border-radius: calc(var(--radius) - 2px);
   }
   .rounded-none {
   border-radius: 0px;
   }
   .rounded-sm {
   border-radius: calc(var(--radius) - 4px);
   }
   .rounded-xl {
   border-radius: 0.75rem;
   }
   .border {
   border-width: 1px;
   }
   .border-2 {
   border-width: 2px;
   }
   .border-4 {
   border-width: 4px;
   }
   .border-b-0 {
   border-bottom-width: 0px;
   }
   .border-l-0 {
   border-left-width: 0px;
   }
   .border-r-0 {
   border-right-width: 0px;
   }
   .border-t-0 {
   border-top-width: 0px;
   }
   .border-none {
   border-style: none;
   }
   .border-\[\#121212\] {
   --tw-border-opacity: 1;
   border-color: rgb(18 18 18 / var(--tw-border-opacity));
   }
   .border-\[\#1c1c1c\] {
   --tw-border-opacity: 1;
   border-color: rgb(28 28 28 / var(--tw-border-opacity));
   }
   .border-\[\#3e3e3e\] {
   --tw-border-opacity: 1;
   border-color: rgb(62 62 62 / var(--tw-border-opacity));
   }
   .border-\[\#464646\] {
   --tw-border-opacity: 1;
   border-color: rgb(70 70 70 / var(--tw-border-opacity));
   }
   .border-\[\#cac9c9\] {
   --tw-border-opacity: 1;
   border-color: rgb(202 201 201 / var(--tw-border-opacity));
   }
   .border-\[\#cacaca\] {
   --tw-border-opacity: 1;
   border-color: rgb(202 202 202 / var(--tw-border-opacity));
   }
   .border-\[\#d7d6d6\] {
   --tw-border-opacity: 1;
   border-color: rgb(215 214 214 / var(--tw-border-opacity));
   }
   .border-\[\#dadada\] {
   --tw-border-opacity: 1;
   border-color: rgb(218 218 218 / var(--tw-border-opacity));
   }
   .border-\[\#e0e0e0\] {
   --tw-border-opacity: 1;
   border-color: rgb(224 224 224 / var(--tw-border-opacity));
   }
   .border-\[\#f3f3f3\] {
   --tw-border-opacity: 1;
   border-color: rgb(243 243 243 / var(--tw-border-opacity));
   }
   .border-black {
   --tw-border-opacity: 1;
   border-color: rgb(0 0 0 / var(--tw-border-opacity));
   }
   .border-blue-500 {
   --tw-border-opacity: 1;
   border-color: rgb(59 130 246 / var(--tw-border-opacity));
   }
   .border-gray-200 {
   --tw-border-opacity: 1;
   border-color: rgb(229 231 235 / var(--tw-border-opacity));
   }
   .border-red-500 {
   --tw-border-opacity: 1;
   border-color: rgb(239 68 68 / var(--tw-border-opacity));
   }
   .border-white {
   --tw-border-opacity: 1;
   border-color: rgb(255 255 255 / var(--tw-border-opacity));
   }
   .border-b-base-200 {
   --tw-border-opacity: 1;
   border-bottom-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
   }
   .border-b-gray-500 {
   --tw-border-opacity: 1;
   border-bottom-color: rgb(107 114 128 / var(--tw-border-opacity));
   }
   .border-t-\[\#53535322\] {
   border-top-color: #53535322;
   }
   .border-t-\[\#e0e0e0\] {
   --tw-border-opacity: 1;
   border-top-color: rgb(224 224 224 / var(--tw-border-opacity));
   }
   .bg-\[\#030303\] {
   --tw-bg-opacity: 1;
   background-color: rgb(3 3 3 / var(--tw-bg-opacity));
   }
   .bg-\[\#121212\] {
   --tw-bg-opacity: 1;
   background-color: rgb(18 18 18 / var(--tw-bg-opacity));
   }
   .bg-\[\#e2e1e1\] {
   --tw-bg-opacity: 1;
   background-color: rgb(226 225 225 / var(--tw-bg-opacity));
   }
   .bg-background {
   background-color: hsl(var(--background));
   }
   .bg-base-100 {
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
   }
   .bg-base-200 {
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
   }
   .bg-base-300 {
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
   }
   .bg-black {
   --tw-bg-opacity: 1;
   background-color: rgb(0 0 0 / var(--tw-bg-opacity));
   }
   .bg-blue-500 {
   --tw-bg-opacity: 1;
   background-color: rgb(59 130 246 / var(--tw-bg-opacity));
   }
   .bg-border {
   background-color: hsl(var(--border));
   }
   .bg-gray-200 {
   --tw-bg-opacity: 1;
   background-color: rgb(229 231 235 / var(--tw-bg-opacity));
   }
   .bg-muted {
   background-color: hsl(var(--muted));
   }
   .bg-popover {
   background-color: hsl(var(--popover));
   }
   .bg-red-500 {
   --tw-bg-opacity: 1;
   background-color: rgb(239 68 68 / var(--tw-bg-opacity));
   }
   .bg-rose-500 {
   --tw-bg-opacity: 1;
   background-color: rgb(244 63 94 / var(--tw-bg-opacity));
   }
   .bg-white {
   --tw-bg-opacity: 1;
   background-color: rgb(255 255 255 / var(--tw-bg-opacity));
   }
   .bg-opacity-100 {
   --tw-bg-opacity: 1;
   }
   .bg-opacity-20 {
   --tw-bg-opacity: 0.2;
   }
   .bg-opacity-25 {
   --tw-bg-opacity: 0.25;
   }
   .bg-opacity-50 {
   --tw-bg-opacity: 0.5;
   }
   .bg-gradient-to-t {
   background-image: linear-gradient(to top, var(--tw-gradient-stops));
   }
   .from-slate-50 {
   --tw-gradient-from: #f8fafc var(--tw-gradient-from-position);
   --tw-gradient-to: rgb(248 250 252 / 0) var(--tw-gradient-to-position);
   --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
   }
   .to-blue-100 {
   --tw-gradient-to: #dbeafe var(--tw-gradient-to-position);
   }
   .fill-black {
   fill: #000;
   }
   .fill-blue-500 {
   fill: #3b82f6;
   }
   .fill-inherit {
   fill: inherit;
   }
   .fill-red-500 {
   fill: #ef4444;
   }
   .fill-white {
   fill: #fff;
   }
   .stroke-blue-500 {
   stroke: #3b82f6;
   }
   .stroke-red-500 {
   stroke: #ef4444;
   }
   .stroke-white {
   stroke: #fff;
   }
   .object-cover {
   -o-object-fit: cover;
   object-fit: cover;
   }
   .p-1 {
   padding: 0.25rem;
   }
   .p-2 {
   padding: 0.5rem;
   }
   .p-3 {
   padding: 0.75rem;
   }
   .p-5 {
   padding: 1.25rem;
   }
   .p-6 {
   padding: 1.5rem;
   }
   .p-\[0\.15rem\] {
   padding: 0.15rem;
   }
   .p-\[0\.3rem\] {
   padding: 0.3rem;
   }
   .p-\[14px\] {
   padding: 14px;
   }
   .px-2 {
   padding-left: 0.5rem;
   padding-right: 0.5rem;
   }
   .px-3 {
   padding-left: 0.75rem;
   padding-right: 0.75rem;
   }
   .py-1 {
   padding-top: 0.25rem;
   padding-bottom: 0.25rem;
   }
   .py-1\.5 {
   padding-top: 0.375rem;
   padding-bottom: 0.375rem;
   }
   .pl-8 {
   padding-left: 2rem;
   }
   .pr-2 {
   padding-right: 0.5rem;
   }
   .pt-0 {
   padding-top: 0px;
   }
   .text-center {
   text-align: center;
   }
   .text-start {
   text-align: start;
   }
   .text-2xl {
   font-size: 1.5rem;
   line-height: 2rem;
   }
   .text-3xl {
   font-size: 1.875rem;
   line-height: 2.25rem;
   }
   .text-6xl {
   font-size: 3.75rem;
   line-height: 1;
   }
   .text-lg {
   font-size: 1.125rem;
   line-height: 1.75rem;
   }
   .text-sm {
   font-size: 0.875rem;
   line-height: 1.25rem;
   }
   .text-xl {
   font-size: 1.25rem;
   line-height: 1.75rem;
   }
   .text-xs {
   font-size: 0.75rem;
   line-height: 1rem;
   }
   .font-bold {
   font-weight: 700;
   }
   .font-extrabold {
   font-weight: 800;
   }
   .font-medium {
   font-weight: 500;
   }
   .font-semibold {
   font-weight: 600;
   }
   .leading-none {
   line-height: 1;
   }
   .tracking-tight {
   letter-spacing: -0.025em;
   }
   .tracking-widest {
   letter-spacing: 0.1em;
   }
   .text-base-content {
   --tw-text-opacity: 1;
   color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
   }
   .text-black {
   --tw-text-opacity: 1;
   color: rgb(0 0 0 / var(--tw-text-opacity));
   }
   .text-blue-500 {
   --tw-text-opacity: 1;
   color: rgb(59 130 246 / var(--tw-text-opacity));
   }
   .text-gray-500 {
   --tw-text-opacity: 1;
   color: rgb(107 114 128 / var(--tw-text-opacity));
   }
   .text-muted-foreground {
   color: hsl(var(--muted-foreground));
   }
   .text-popover-foreground {
   color: hsl(var(--popover-foreground));
   }
   .text-red-500 {
   --tw-text-opacity: 1;
   color: rgb(239 68 68 / var(--tw-text-opacity));
   }
   .text-rose-500 {
   --tw-text-opacity: 1;
   color: rgb(244 63 94 / var(--tw-text-opacity));
   }
   .text-white {
   --tw-text-opacity: 1;
   color: rgb(255 255 255 / var(--tw-text-opacity));
   }
   .opacity-50 {
   opacity: 0.5;
   }
   .opacity-60 {
   opacity: 0.6;
   }
   .shadow {
   --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
   --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
   box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
   }
   .shadow-lg {
   --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
   --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
   box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
   }
   .shadow-md {
   --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
   --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
   box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
   }
   .shadow-none {
   --tw-shadow: 0 0 #0000;
   --tw-shadow-colored: 0 0 #0000;
   box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
   }
   .shadow-sm {
   --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
   --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
   box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
   }
   .outline-none {
   outline: 2px solid transparent;
   outline-offset: 2px;
   }
   .filter {
   filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
   }
   .backdrop-blur-sm {
   --tw-backdrop-blur: blur(4px);
   -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
   backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
   }
   .transition {
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
   transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   transition-duration: 150ms;
   }
   .transition-all {
   transition-property: all;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   transition-duration: 150ms;
   }
   .transition-shadow {
   transition-property: box-shadow;
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   transition-duration: 150ms;
   }
   .duration-300 {
   transition-duration: 300ms;
   }
   .ease-in-out {
   transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   }
   @keyframes enter {
   from {
   opacity: var(--tw-enter-opacity, 1);
   transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
   }
   }
   @keyframes exit {
   to {
   opacity: var(--tw-exit-opacity, 1);
   transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
   }
   }
   .duration-300 {
   animation-duration: 300ms;
   }
   .ease-in-out {
   animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
   }
   /**
   slide up animation
   **/
   .slide-up {
   opacity: 0;
   transform: translateY(-100%);
   }
   .slide-up-active {
   opacity: 1;
   transform: translateY(0);
   transition: all 0.5s;
   }
   .slide-up-exit {
   opacity: 1;
   transform: translateY(0);
   }
   .countdown >  *:before{
   transition: all .5s cubic-bezier(1, 0, 0, 1);
   content: "0\A 1\A 2\A 3\A 4\A 5\A 6\A 7\A 8\A 9\A 10\A 11\A 12\A 13\A 14\A 15\A 16\A 17\A 18\A 19\A 20\A 21\A 22\A 23\A 24\A 25\A 26\A 27\A 28\A 29\A 30\A 31\A 32\A 33\A 34\A 35\A 36\A 37\A 38\A 39\A 40\A 41\A 42\A 43\A 44\A 45\A 46\A 47\A 48\A 49\A 50\A 51\A 52\A 53\A 54\A 55\A 56\A 57\A 58\A 59\A 60\A 61\A 62\A 63\A 64\A 65\A 66\A 67\A 68\A 69\A 70\A 71\A 72\A 73\A 74\A 75\A 76\A 77\A 78\A 79\A 80\A 81\A 82\A 83\A 84\A 85\A 86\A 87\A 88\A 89\A 90\A 91\A 92\A 93\A 94\A 95\A 96\A 97\A 98\A 99\A"
   }
   /**
   turn img black and white
   **/
   .black { 
   filter: brightness(0) saturate(100%);
   }
   /**
   hide scrollbar
   **/
   .scroll{
   scrollbar-width: none;
   -ms-overflow-style: none;
   }
   @media (max-width: 767px) {
   .sm\:modal-bottom {
   place-items: end;
   }
   .sm\:modal-bottom :where(.modal-box) {
   width: 100%;
   max-width: none;
   --tw-translate-y: 2.5rem;
   --tw-scale-x: 1;
   --tw-scale-y: 1;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   border-top-left-radius: var(--rounded-box, 1rem);
   border-top-right-radius: var(--rounded-box, 1rem);
   border-bottom-right-radius: 0px;
   border-bottom-left-radius: 0px;
   }
   }
   @media (min-width: 768px) {
   .md\:modal-middle {
   place-items: center;
   }
   .md\:modal-middle :where(.modal-box) {
   width: 91.666667%;
   max-width: 32rem;
   --tw-translate-y: 0px;
   --tw-scale-x: .9;
   --tw-scale-y: .9;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   border-top-left-radius: var(--rounded-box, 1rem);
   border-top-right-radius: var(--rounded-box, 1rem);
   border-bottom-right-radius: var(--rounded-box, 1rem);
   border-bottom-left-radius: var(--rounded-box, 1rem);
   }
   }
   @media (min-width: 1024px) {
   .lg\:drawer-open > .drawer-toggle {
   display: none;
   }
   .lg\:drawer-open > .drawer-toggle ~ .drawer-side {
   pointer-events: auto;
   visibility: visible;
   position: sticky;
   display: block;
   width: auto;
   overscroll-behavior: auto;
   }
   .lg\:drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(0%);
   }
   [dir="rtl"] .lg\:drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(0%);
   }
   .lg\:drawer-open > .drawer-toggle:checked ~ .drawer-side {
   pointer-events: auto;
   visibility: visible;
   }
   .lg\:drawer-open > .drawer-side {
   overflow-y: auto;
   }
   html:has(.lg\:drawer-open.lg\:drawer-open) {
   overflow-y: auto;
   scrollbar-gutter: auto;
   }
   .lg\:drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
   cursor: default;
   background-color: transparent;
   }
   }
   @media (min-width: 1280px) {
   .xl\:drawer {
   position: relative;
   display: grid;
   grid-auto-columns: max-content auto;
   width: 100%;
   }
   .xl\:drawer-end {
   grid-auto-columns: auto max-content;
   }
   .xl\:drawer-end > .drawer-toggle ~ .drawer-content {
   grid-column-start: 1;
   }
   .xl\:drawer-end > .drawer-toggle ~ .drawer-side {
   grid-column-start: 2;
   justify-items: end;
   }
   .xl\:drawer-end > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(100%);
   }
   [dir="rtl"] .xl\:drawer-end > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(-100%);
   }
   .xl\:drawer-end > .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(0%);
   }
   .xl\:drawer-open > .drawer-toggle {
   display: none;
   }
   .xl\:drawer-open > .drawer-toggle ~ .drawer-side {
   pointer-events: auto;
   visibility: visible;
   position: sticky;
   display: block;
   width: auto;
   overscroll-behavior: auto;
   }
   .xl\:drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(0%);
   }
   [dir="rtl"] .xl\:drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
   transform: translateX(0%);
   }
   .xl\:drawer-open > .drawer-toggle:checked ~ .drawer-side {
   pointer-events: auto;
   visibility: visible;
   }
   .xl\:drawer-open > .drawer-side {
   overflow-y: auto;
   }
   html:has(.xl\:drawer-open.xl\:drawer-open) {
   overflow-y: auto;
   scrollbar-gutter: auto;
   }
   .xl\:modal-middle {
   place-items: center;
   }
   .xl\:drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
   cursor: default;
   background-color: transparent;
   }
   .xl\:modal-middle :where(.modal-box) {
   width: 91.666667%;
   max-width: 32rem;
   --tw-translate-y: 0px;
   --tw-scale-x: .9;
   --tw-scale-y: .9;
   transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
   border-top-left-radius: var(--rounded-box, 1rem);
   border-top-right-radius: var(--rounded-box, 1rem);
   border-bottom-right-radius: var(--rounded-box, 1rem);
   border-bottom-left-radius: var(--rounded-box, 1rem);
   }
   }
   .hover\:justify-start:hover {
   justify-content: flex-start;
   }
   .hover\:rounded-full:hover {
   border-radius: 9999px;
   }
   .hover\:bg-\[\#121212\]:hover {
   --tw-bg-opacity: 1;
   background-color: rgb(18 18 18 / var(--tw-bg-opacity));
   }
   .hover\:bg-\[\#754aff\]:hover {
   --tw-bg-opacity: 1;
   background-color: rgb(117 74 255 / var(--tw-bg-opacity));
   }
   .hover\:bg-\[\#faf9f9\]:hover {
   --tw-bg-opacity: 1;
   background-color: rgb(250 249 249 / var(--tw-bg-opacity));
   }
   .hover\:bg-base-200:hover {
   --tw-bg-opacity: 1;
   background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
   }
   .hover\:bg-black:hover {
   --tw-bg-opacity: 1;
   background-color: rgb(0 0 0 / var(--tw-bg-opacity));
   }
   .hover\:bg-blue-500:hover {
   --tw-bg-opacity: 1;
   background-color: rgb(59 130 246 / var(--tw-bg-opacity));
   }
   .hover\:bg-green-400:hover {
   --tw-bg-opacity: 1;
   background-color: rgb(74 222 128 / var(--tw-bg-opacity));
   }
   .hover\:bg-rose-500:hover {
   --tw-bg-opacity: 1;
   background-color: rgb(244 63 94 / var(--tw-bg-opacity));
   }
   .hover\:bg-sky-500:hover {
   --tw-bg-opacity: 1;
   background-color: rgb(14 165 233 / var(--tw-bg-opacity));
   }
   .hover\:bg-transparent:hover {
   background-color: transparent;
   }
   .hover\:bg-opacity-20:hover {
   --tw-bg-opacity: 0.2;
   }
   .hover\:fill-black:hover {
   fill: #000;
   }
   .hover\:p-2:hover {
   padding: 0.5rem;
   }
   .hover\:text-lg:hover {
   font-size: 1.125rem;
   line-height: 1.75rem;
   }
   .hover\:text-black:hover {
   --tw-text-opacity: 1;
   color: rgb(0 0 0 / var(--tw-text-opacity));
   }
   .hover\:text-green-600:hover {
   --tw-text-opacity: 1;
   color: rgb(22 163 74 / var(--tw-text-opacity));
   }
   .hover\:text-sky-500:hover {
   --tw-text-opacity: 1;
   color: rgb(14 165 233 / var(--tw-text-opacity));
   }
   .hover\:underline:hover {
   text-decoration-line: underline;
   }
   .hover\:outline-none:hover {
   outline: 2px solid transparent;
   outline-offset: 2px;
   }
   .focus\:border-\[\#cac9c9\]:focus {
   --tw-border-opacity: 1;
   border-color: rgb(202 201 201 / var(--tw-border-opacity));
   }
   .focus\:bg-accent:focus {
   background-color: hsl(var(--accent));
   }
   .focus\:bg-blue-500:focus {
   --tw-bg-opacity: 1;
   background-color: rgb(59 130 246 / var(--tw-bg-opacity));
   }
   .focus\:text-accent-foreground:focus {
   color: hsl(var(--accent-foreground));
   }
   .focus\:outline-none:focus {
   outline: 2px solid transparent;
   outline-offset: 2px;
   }
   .focus-visible\:outline-none:focus-visible {
   outline: 2px solid transparent;
   outline-offset: 2px;
   }
   .focus-visible\:ring-\[1\.5px\]:focus-visible {
   --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
   --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1.5px + var(--tw-ring-offset-width)) var(--tw-ring-color);
   box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
   }
   .focus-visible\:ring-ring:focus-visible {
   --tw-ring-color: hsl(var(--ring));
   }
   .focus-visible\:ring-offset-1:focus-visible {
   --tw-ring-offset-width: 1px;
   }
   .data-\[disabled\]\:pointer-events-none[data-disabled] {
   pointer-events: none;
   }
   .data-\[orientation\=vertical\]\:h-px[data-orientation="vertical"] {
   height: 1px;
   }
   .data-\[orientation\=vertical\]\:w-full[data-orientation="vertical"] {
   width: 100%;
   }
   .data-\[expanded\]\:bg-accent[data-expanded] {
   background-color: hsl(var(--accent));
   }
   .data-\[expanded\]\:text-accent-foreground[data-expanded] {
   color: hsl(var(--accent-foreground));
   }
   .data-\[disabled\]\:opacity-50[data-disabled] {
   opacity: 0.5;
   }
   .data-\[expanded\]\:animate-in[data-expanded] {
   animation-name: enter;
   animation-duration: 150ms;
   --tw-enter-opacity: initial;
   --tw-enter-scale: initial;
   --tw-enter-rotate: initial;
   --tw-enter-translate-x: initial;
   --tw-enter-translate-y: initial;
   }
   .data-\[closed\]\:animate-out[data-closed] {
   animation-name: exit;
   animation-duration: 150ms;
   --tw-exit-opacity: initial;
   --tw-exit-scale: initial;
   --tw-exit-rotate: initial;
   --tw-exit-translate-x: initial;
   --tw-exit-translate-y: initial;
   }
   .data-\[closed\]\:fade-out-0[data-closed] {
   --tw-exit-opacity: 0;
   }
   .data-\[expanded\]\:fade-in-0[data-expanded] {
   --tw-enter-opacity: 0;
   }
   .data-\[closed\]\:zoom-out-95[data-closed] {
   --tw-exit-scale: .95;
   }
   .data-\[expanded\]\:zoom-in-95[data-expanded] {
   --tw-enter-scale: .95;
   }
   @media (max-width: 767px) {
   .sm\:bottom-\[5px\] {
   bottom: 5px;
   }
   .sm\:left-\[-10vw\] {
   left: -10vw;
   }
   .sm\:bottom-\[3px\] {
   bottom: 3px;
   }
   .sm\:bottom-\[1px\] {
   bottom: 1px;
   }
   .sm\:mb-\[70px\] {
   margin-bottom: 70px;
   }
   .sm\:mt-0 {
   margin-top: 0px;
   }
   .sm\:mt-2 {
   margin-top: 0.5rem;
   }
   .sm\:hidden {
   display: none;
   }
   .sm\:w-\[25rem\] {
   width: 25rem;
   }
   .sm\:border-none {
   border-style: none;
   }
   .sm\:p-0 {
   padding: 0px;
   }
   .sm\:p-3 {
   padding: 0.75rem;
   }
   }
   @media (min-width: 768px) {
   .md\:mt-12 {
   margin-top: 3rem;
   }
   .md\:mt-3 {
   margin-top: 0.75rem;
   }
   .md\:h-1\/2 {
   height: 50%;
   }
   .md\:w-\[600px\] {
   width: 600px;
   }
   .md\:rounded-xl {
   border-radius: 0.75rem;
   }
   .md\:p-2 {
   padding: 0.5rem;
   }
   .md\:p-4 {
   padding: 1rem;
   }
   }
   @media (min-width: 1024px) {
   .lg\:flex {
   display: flex;
   }
   .lg\:hidden {
   display: none;
   }
   .lg\:w-\[50vw\] {
   width: 50vw;
   }
   }
   @media (min-width: 1280px) {
   .xl\:mx-auto {
   margin-left: auto;
   margin-right: auto;
   }
   .xl\:mt-12 {
   margin-top: 3rem;
   }
   .xl\:mt-5 {
   margin-top: 1.25rem;
   }
   .xl\:flex {
   display: flex;
   }
   .xl\:hidden {
   display: none;
   }
   .xl\:h-20 {
   height: 5rem;
   }
   .xl\:h-24 {
   height: 6rem;
   }
   .xl\:h-6 {
   height: 1.5rem;
   }
   .xl\:h-\[35vh\] {
   height: 35vh;
   }
   .xl\:h-\[600px\] {
   height: 600px;
   }
   .xl\:w-20 {
   width: 5rem;
   }
   .xl\:w-24 {
   width: 6rem;
   }
   .xl\:w-6 {
   width: 1.5rem;
   }
   .xl\:w-\[15vw\] {
   width: 15vw;
   }
   .xl\:w-\[30vw\] {
   width: 30vw;
   }
   .xl\:w-\[40vw\] {
   width: 40vw;
   }
   .xl\:w-\[600px\] {
   width: 600px;
   }
   .xl\:w-\[auto\] {
   width: auto;
   }
   .xl\:rounded-xl {
   border-radius: 0.75rem;
   }
   .xl\:border {
   border-width: 1px;
   }
   .xl\:border-\[\#121212\] {
   --tw-border-opacity: 1;
   border-color: rgb(18 18 18 / var(--tw-border-opacity));
   }
   .xl\:border-\[\#d3d3d3d8\] {
   border-color: #d3d3d3d8;
   }
   .xl\:p-0 {
   padding: 0px;
   }
   }
   @media (min-width: 1400px) {
   .\32xl\:hidden {
   display: none;
   }
   .\32xl\:w-\[79rem\] {
   width: 79rem;
   }
   }
</style>